/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.InsurancePolicyPlannerRole;

import Business.Enterprise.Enterprise;
import Business.Enterprise.EntInsurance;
import Business.Insurance.Insurance;
import Business.Org.OrgInsurancePolicyPlanner;
import Business.SystemUserAccount.SystemUsers;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author Pratik
 */
public class InsurancePolicyPlannerWorkAreaJPanel extends javax.swing.JPanel {

    private JPanel jPanel;
    private SystemUsers usrAcnt;
    private OrgInsurancePolicyPlanner insrPlcyPlnrOrg;
    private EntInsurance insrCmpEnt;

    /**
     * Creates new form InsurancePolicyPlannerJPanel
     */
    public InsurancePolicyPlannerWorkAreaJPanel(JPanel userProcessContainer, SystemUsers account, OrgInsurancePolicyPlanner insurancePolicyPlannerOrganization, Enterprise enterprise) {
        initComponents();
        this.jPanel = userProcessContainer;
        this.usrAcnt = usrAcnt;
        this.insrPlcyPlnrOrg = insurancePolicyPlannerOrganization;
        this.insrCmpEnt = (EntInsurance) enterprise;

        pplTbl();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblCrtANwPlcy = new javax.swing.JLabel();
        lblPlcyNm = new javax.swing.JLabel();
        txtPlcyNm = new javax.swing.JTextField();
        txtPlcyCvrgPrcnt = new javax.swing.JTextField();
        lblPlcyCvrgTxt = new javax.swing.JLabel();
        txtPlcyTnC = new javax.swing.JTextField();
        lblPlcyTnC = new javax.swing.JLabel();
        none = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblPlcyPlanner = new javax.swing.JTable();
        btnCrtPlcy = new javax.swing.JButton();
        lblMonthlyPremium = new javax.swing.JLabel();
        txtMonthlyPremium = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(0, 204, 204));

        lblCrtANwPlcy.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        lblCrtANwPlcy.setText("Create a New Policy");

        lblPlcyNm.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        lblPlcyNm.setText("Policy Name: ");

        lblPlcyCvrgTxt.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        lblPlcyCvrgTxt.setText("Policy Coverage (in %): ");

        lblPlcyTnC.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        lblPlcyTnC.setText("Policy Terms & Condition: ");

        none.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        none.setForeground(new java.awt.Color(255, 255, 255));

        jLabel6.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel6.setText("Policy Planner Work Area");

        tblPlcyPlanner.setBackground(new java.awt.Color(204, 204, 204));
        tblPlcyPlanner.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        tblPlcyPlanner.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Policy Name", "Policy Coverage %", "Monthly Premium", "Policy T&C"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblPlcyPlanner);

        btnCrtPlcy.setBackground(new java.awt.Color(0, 102, 102));
        btnCrtPlcy.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnCrtPlcy.setText("Create Policy");
        btnCrtPlcy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCrtPlcyActionPerformed(evt);
            }
        });

        lblMonthlyPremium.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        lblMonthlyPremium.setText("Monthly Premium(USD):");

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/InsurancePolicy.jpg"))); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(127, 127, 127)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 332, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(294, 294, 294)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lblPlcyNm)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(txtPlcyNm, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lblPlcyCvrgTxt)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(txtPlcyCvrgPrcnt, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lblMonthlyPremium)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(txtMonthlyPremium, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lblPlcyTnC)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(txtPlcyTnC, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(btnCrtPlcy)
                                    .addGap(97, 97, 97)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(99, 99, 99)
                                .addComponent(lblCrtANwPlcy, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(none))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 963, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(971, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblCrtANwPlcy)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPlcyNm)
                    .addComponent(txtPlcyNm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPlcyCvrgTxt)
                    .addComponent(txtPlcyCvrgPrcnt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblMonthlyPremium)
                    .addComponent(txtMonthlyPremium, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPlcyTnC)
                    .addComponent(txtPlcyTnC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnCrtPlcy)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(none)
                        .addGap(185, 185, 185))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 461, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnCrtPlcyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCrtPlcyActionPerformed
        String policyName = txtPlcyNm.getText().trim();
        String poliCoverageTxt = txtPlcyCvrgPrcnt.getText().trim();
        String monthlyPremiumTxt = txtMonthlyPremium.getText().trim();
        String policyTC = txtPlcyTnC.getText().trim();
        if (policyName.equals("")) {
            JOptionPane.showMessageDialog(null, "Policy Name is mandatory");
            return;
        }

        if (poliCoverageTxt.equals("")) {
            JOptionPane.showMessageDialog(null, "Policy Coverage is mandatory");
            return;
        }

        if (monthlyPremiumTxt.equals("")) {
            JOptionPane.showMessageDialog(null, "Monthly Premium is mandatory");
            return;
        }

        if (policyTC.equals("")) {
            JOptionPane.showMessageDialog(null, "Policy TC is mandatory");
            return;
        }

        double policyCoverage = 0;
        try {
            policyCoverage = Double.parseDouble(poliCoverageTxt);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Please enter numeric values for insurance coverage");

            return;
        }

        double monthlyPremium = 0;
        try {
            monthlyPremium = Double.parseDouble(monthlyPremiumTxt);
        } catch (NumberFormatException ne) {
            JOptionPane.showMessageDialog(null, "Please enter numeric values for monthly premium");
        }

        List<Insurance> plcys = insrCmpEnt.getInsPlcyDir().getInsurancePolicies();
        for (Insurance insurance : plcys) {
            if (policyName.equalsIgnoreCase(insurance.getPolicyName())) {
                JOptionPane.showMessageDialog(null, "Policy already exists, please provide some other policy name");
                return;
            }
        }
        Insurance insr = new Insurance(policyName, insrCmpEnt.getName(), policyCoverage);
        insr.setPolicyTnC(policyTC);
        insr.setMonthlyPremium(monthlyPremium);

        // InsuranceCompanyEnterprise insuranceCompanyEnterprise = insuranceCompanyEnterprise;
        insrCmpEnt.getInsPlcyDir().getInsurancePolicies().add(insr);
        JOptionPane.showMessageDialog(null, "Policy Added Successfully");
        System.out.println("Policy Added Successfully:" + insrCmpEnt.getInsPlcyDir().getInsurancePolicies());
        pplTbl();
        txtPlcyNm.setText("");
        txtMonthlyPremium.setText("");
        txtPlcyCvrgPrcnt.setText("");
        txtPlcyTnC.setText("");

    }//GEN-LAST:event_btnCrtPlcyActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCrtPlcy;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblCrtANwPlcy;
    private javax.swing.JLabel lblMonthlyPremium;
    private javax.swing.JLabel lblPlcyCvrgTxt;
    private javax.swing.JLabel lblPlcyNm;
    private javax.swing.JLabel lblPlcyTnC;
    private javax.swing.JLabel none;
    private javax.swing.JTable tblPlcyPlanner;
    private javax.swing.JTextField txtMonthlyPremium;
    private javax.swing.JTextField txtPlcyCvrgPrcnt;
    private javax.swing.JTextField txtPlcyNm;
    private javax.swing.JTextField txtPlcyTnC;
    // End of variables declaration//GEN-END:variables

    private void pplTbl() {
//        DefaultTableModel model = (DefaultTableModel) workRequestJTable.getModel();

        DefaultTableModel model = (DefaultTableModel) tblPlcyPlanner.getModel();
        model.setRowCount(0);
        List<Insurance> plcys = insrCmpEnt.getInsPlcyDir().getInsurancePolicies();
        for (Insurance insurancePolicy : plcys) {
            Object[] row = new Object[4];
            row[0] = insurancePolicy;
            row[1] = insurancePolicy.getCoverage();
            row[2] = insurancePolicy.getMonthlyPremium();
            row[3] = insurancePolicy.getPolicyTnC();
            model.addRow(row);
        }
        TableRowSorter<DefaultTableModel> sorter = new TableRowSorter<>(model);
        tblPlcyPlanner.setRowSorter(sorter);
    }
}
