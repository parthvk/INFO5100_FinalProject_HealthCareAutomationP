/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.InsuranceAgentRole;

import Business.Enterprise.Enterprise;

import Business.Org.OrgInsuranceAgent;
import Business.SystemUserAccount.SystemUsers;
import Business.WorkQueue.InsReq;
import Business.WorkQueue.WorkReq;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;


/**
 *

 * @author ankitajha

 */

public class AllInsuranceRequestsJPanel extends javax.swing.JPanel {

    /**
     * Creates new form AllInsuranceRequestsJPanel
     */
    private JPanel jPanel;
    private SystemUsers usrAcnt;
    private Enterprise entrpz;
    private OrgInsuranceAgent insrAgntOrg;

    public AllInsuranceRequestsJPanel(JPanel userProcessContainer, SystemUsers userAccount, Enterprise enterprise, OrgInsuranceAgent insuranceAgentOrganization) {
        initComponents();
        this.jPanel = userProcessContainer;
        this.usrAcnt = userAccount;
        this.entrpz = enterprise;
        this.insrAgntOrg = insuranceAgentOrganization;
        pplTbl();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblPrcsReq = new javax.swing.JTable();
        btnPrcsReq = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        btnAssgndToMe = new javax.swing.JButton();

        setBackground(new java.awt.Color(0, 204, 204));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel1.setText("Process Requests");

        tblPrcsReq.setBackground(new java.awt.Color(204, 204, 204));
        tblPrcsReq.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        tblPrcsReq.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "PolicyNumber", "Patient Name", "Health Center", "Sender ", "Receiver Agent", "Billing Amount", "Claim Amount", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblPrcsReq);

        btnPrcsReq.setBackground(new java.awt.Color(0, 102, 102));
        btnPrcsReq.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnPrcsReq.setForeground(new java.awt.Color(255, 255, 255));
        btnPrcsReq.setText("Process Request");
        btnPrcsReq.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrcsReqActionPerformed(evt);
            }
        });

        btnBack.setBackground(new java.awt.Color(204, 204, 204));
        btnBack.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        btnAssgndToMe.setBackground(new java.awt.Color(0, 102, 102));
        btnAssgndToMe.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnAssgndToMe.setForeground(java.awt.Color.white);
        btnAssgndToMe.setText("Assign To Me");
        btnAssgndToMe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAssgndToMeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 959, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(334, 334, 334)
                                .addComponent(btnAssgndToMe)
                                .addGap(61, 61, 61)
                                .addComponent(btnPrcsReq))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(btnBack)
                                .addGap(265, 265, 265)
                                .addComponent(jLabel1)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(23, 23, 23))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnBack)))
                .addGap(29, 29, 29)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnPrcsReq, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAssgndToMe, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(190, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnPrcsReqActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrcsReqActionPerformed
        int selRow = tblPrcsReq.getSelectedRow();
        InsReq isnrWrkReq;

        if (selRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row");
            return;
        } else {
            isnrWrkReq = (InsReq) tblPrcsReq.getValueAt(selRow, 0);

            if (isnrWrkReq.getReqStatus().equals("Rejected")) {
                JOptionPane.showMessageDialog(null, "Cannot process a Rejected Request", "Warning!", JOptionPane.WARNING_MESSAGE);
                return;
            }
            if (isnrWrkReq.getReqStatus().equalsIgnoreCase("Sent to Secretary")) {
                JOptionPane.showMessageDialog(null, "Request already processed", "Warning!", JOptionPane.WARNING_MESSAGE);
                return;
            }
            if (isnrWrkReq.getReqStatus().equalsIgnoreCase("Sent")) {
                JOptionPane.showMessageDialog(null, "Assign the request first");
                return;
            }
            if (isnrWrkReq.getReqStatus().equalsIgnoreCase("Sent to Finance Department")) {
                JOptionPane.showMessageDialog(null, "Request already sent to Finance department");
                return;
            }
            if (isnrWrkReq.getReqStatus().equalsIgnoreCase("Insurance Claim Approved")) {
                JOptionPane.showMessageDialog(null, "Insurance Claim is already Approved");
                return;
            }

            if (!usrAcnt.equals(isnrWrkReq.getRcvr())) {
                JOptionPane.showMessageDialog(null, "Not Authorized", "Warning!", JOptionPane.WARNING_MESSAGE);
                return;
            } else {

                CardLayout cardLayout = (CardLayout) jPanel.getLayout();
                jPanel.add("ProcessRequestJPanel", new ProcessRequestJPanel(jPanel, usrAcnt, entrpz, isnrWrkReq));
                cardLayout.next(jPanel);
            }
        }

    }//GEN-LAST:event_btnPrcsReqActionPerformed

    private void btnAssgndToMeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAssgndToMeActionPerformed
        int selRow = tblPrcsReq.getSelectedRow();
        if (selRow < 0) {
            JOptionPane.showMessageDialog(null, "Please Select a Row");
            return;
        } else {
            InsReq insrWrkReq = (InsReq) tblPrcsReq.getValueAt(selRow, 0);
            if (insrWrkReq.getReqStatus().equals("Sent")) {
                insrWrkReq.setRcvr(usrAcnt);
                insrWrkReq.setReqStatus("Pending on Agent: " + usrAcnt.getEmploye().getEmpName());
                pplTbl();
                JOptionPane.showMessageDialog(null, "Success !! Request is assigned to you ");
            } else {
                JOptionPane.showMessageDialog(null, "Can't assign this request, as it is in " + insrWrkReq.getReqStatus() + " status", "Warning!", JOptionPane.WARNING_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnAssgndToMeActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        jPanel.remove(this);
        CardLayout layout = (CardLayout) jPanel.getLayout();
        layout.previous(jPanel);
    }//GEN-LAST:event_btnBackActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAssgndToMe;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnPrcsReq;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblPrcsReq;
    // End of variables declaration//GEN-END:variables

    public void pplTbl() {
        DefaultTableModel model = (DefaultTableModel) tblPrcsReq.getModel();

        model.setRowCount(0);

        for (WorkReq req : insrAgntOrg.getWrkQ().getWrkReqs()) {
            Object[] row = new Object[8];
            String status = req.getReqStatus();
            row[0] = ((InsReq) req);
            row[1] = ((InsReq) req).getInsuranceCust().getCustFrstNm() + " " + ((InsReq) req).getInsuranceCust().getCustLstNme();
            row[2] = ((InsReq) req).getHlthCentre();

            row[3] = req.getSndr().getEmploye().getEmpName();
            row[4] = req.getRcvr();

            row[5] = ((InsReq) req).getBillingAmt();

            row[6] = ((InsReq) req).getClmAmt();
            row[7] = req.getReqStatus();

            model.addRow(row);
        }
    TableRowSorter<DefaultTableModel> sorter = new TableRowSorter<>(model);
        tblPrcsReq.setRowSorter(sorter);
    }
}
